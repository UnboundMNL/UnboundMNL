<form action="/uploadUsers" method="post" enctype="multipart/form-data" class="register-container w-full">
	<h4>Account Registration</h4><hr>
	<div class="edit-container flex flex-column" style="gap: 1em">
		<h4>Upload Excel File</h4>
		<label for="fileUpload" style="gap: 0.25em;" class="upload-container flex flex-column">
			<input type="file" name="file" id="fileUpload" class="hidden-file-input">
			<img src="/img/upload.svg" />
			Drag & drop a file to upload
			<div id="fileName"></div>
			<label for="fileUpload" class="btn btn-upload-files" style="width: fit-content" type="button">Upload Files</label>
		</label>

		<select id="template" name="template" defaultValue="yearly">
			<option value="yearly">Yearly</option>
			<option value="monthly">Monthly</option>
		</select>
		<input type="number" name="year" id="year" placeholder="year" hidden>

		<% if (authority != 'Treasurer') { %>
			<select id="subproject" name="subproject"></select>
			<select id="shg" name="shg"></select>
		<% } %>

		<button id="registerButton" class="btn btn-primary" style="width: fit-content; align-self: center" disabled>Register Accounts</button>
	</div>
</form>

<script>
	const fileInput = document.querySelector('#fileUpload');
	const fileNameDisplay = document.querySelector('#fileName');
	const registerBtn = document.querySelector('#registerButton');

	fileInput.onchange = function () {
		if (this.files.length > 0) {
			fileNameDisplay.innerText = this.files[0].name;
			registerBtn.disabled = false; 
		} else {
			fileNameDisplay.innerText = '';
			registerBtn.disabled = true;
		}
	};

	const templateSel = document.querySelector("#template")
	const yearField = document.querySelector("#year")
	const updateTemplateSel = (e) => {
		if (e.target.value == "monthly") yearField.hidden = false
		else yearField.hidden = true
	}
	templateSel.onchange = updateTemplateSel
	updateTemplateSel({target: templateSel})

	const subprojects = JSON.parse('<%- subprojects %>')
	const shgs = JSON.parse('<%- shgs %>')

	console.log({subprojects, shgs})

	const subprojectSelect = document.querySelector('#subproject')
	const shgSelect = document.querySelector('#shg')

	const createOption = (id, displayValue) => {
		const elm = document.createElement('option')
		elm.innerText = displayValue
		elm.value = id
		return elm
	}

	const updateOptions = (options, elm) => {
		elm.innerHTML = "" // clear
		console.log(options)
		options.forEach(o => {
			elm.appendChild(createOption(o.id, o.value))
		})
		elm.value = options[0]?.id || ''
	}

	updateOptions(subprojects.map(p => ({id: p._id, value: p.name})), subprojectSelect)

	const updateShgs = (e) => {
		const sp = subprojects.find(p => p._id == e.target.value)
		const validShgs = shgs.filter(s => sp
											.groups
											.includes(s._id))
		updateOptions(validShgs.map(g => ({id: g._id, value: g.name})), shgSelect)
	}
	subprojectSelect.onchange = updateShgs
	updateShgs({ target: subprojectSelect })
</script>
